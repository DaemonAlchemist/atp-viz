<?php $timeZoneOffset = isset($timeZoneOffset) ? $timeZoneOffset : "";?>
<script type="text/javascript">
	google.load("visualization", "1", {packages: ["corechart"]});
	google.setOnLoadCallback(<?=$name?>DrawChart);
	var <?=$name?>Chart;
	var <?=$name?>ChartData;
	var <?=$name?>ChartOptions = <?=is_array($chartOptions) ? \Zend\Json\Json::encode($chartOptions, false, array('enableJsonExprFinder' => true)) : $chartOptions?>;
	function <?=$name?>DrawChart() {
		<?=$name?>ChartData = new google.visualization.DataTable();
		<?php foreach($data['columns'] as $column => $dataType) { ?>
			<?=$name?>ChartData.addColumn('<?=$dataType?>', '<?=$column?>');
		<?php } ?>
		<?=$name?>ChartData.addRows([<?=\ATP\MapReduce::process(
			$data['data'],
			function($vals, $key) use ($data, $timeZoneOffset){
				$columnNames = array_keys($data['columns']);
				$keyName = $columnNames[0];
				$key = (strpos($data['columns'][$keyName], 'date') === false)
					? "'{$key}'"
					: "new Date('" . str_replace(" ", "T", $key) . $timeZoneOffset . "')";
				return "[{$key}, " . \ATP\MapReduce::wrapJoin($vals, ",") . "]";
			},
			new \ATP\Reducer\Concatenate(",")
		)?>]);
		
		<?=$name?>Chart = new google.visualization.LineChart(document.getElementById('<?=$cssId?>'));
		<?=$name?>Chart.draw(<?=$name?>ChartData, <?=$name?>ChartOptions);
		
	};

	<?php if($this->updateUrl) { ?>
		<?php if(isset($this->queryVars)) { ?>
			var <?=$name?>Data = <?=json_encode(array_intersect_key((array)$this->vars(), array_flip($this->queryVars)))?>;
		<?php } else { ?>
			var <?=$name?>Data = {};
		<?php } ?>
		var <?=$name?>UpdateUrl = "<?=$this->updateUrl?>";
		<?php if($this->updateFrequency > 0) { ?>
			var <?=$name?>UpdateFrequency = <?=$this->updateFrequency?>;
		<?php } ?>
		
		var <?=$name?>Updater = function(){
			$.ajax({
				url: "<?=$this->basePath()?><?=$this->updateUrl?>",
				type: 'GET',
				data: <?=$name?>Data,
				dataType: "json",
				error: function(jqXHR, textStatus, errorThrown ){
					//alert(textStatus + ": " + errorThrown);
				},
				success: function(data, textStatus, jqXHR) {
					if(!(data instanceof Array)) {
						var newData = [];
						for(index in data.data) {
							var row = [];
							row.push(index);
							row = row.concat(data.data[index]);
							newData.push(row);
						}
						data = newData;
					}
					
					data.forEach(function(row, index){
						<?php $index = 0; ?>
						<?php foreach(array_values($data['columns']) as $type) { ?>
							<?php if(strpos($type, 'date') !== false) { ?>
								if(data[index][<?=$index?>].indexOf("T") == -1) data[index][<?=$index?>] = data[index][<?=$index?>].replace(" ", "T");
								data[index][<?=$index?>] = new Date(data[index][<?=$index?>] + "<?=$timeZoneOffset?>");
							<?php } ?>
							<?php $index++; ?>
						<?php } ?>
					});
					
					<?php if($updateRowMode == 'replace') { ?><?=$name?>ChartData.removeRows(0,999999999999);<?php } ?>
					<?=$name?>ChartData.addRows(data);
					<?php if(isset($hAxisMinUpdate)) { ?>
						<?=$name?>ChartOptions.hAxis.viewWindow.min = <?=$hAxisMinUpdate?>;
					<?php } ?>
					<?php if(isset($hAxisMaxUpdate)) { ?>
						<?=$name?>ChartOptions.hAxis.viewWindow.max = <?=$hAxisMaxUpdate?>;
					<?php } ?>
					<?=$name?>Chart.draw(<?=$name?>ChartData, <?=$name?>ChartOptions);
				}
			});
		};
		<?php if($this->updateFrequency > 0) { ?>
			setInterval(<?=$name?>Updater, <?=$name?>UpdateFrequency * 1000);
		<?php } ?>
		//<?=$name?>Updater();
	<?php } ?>
</script>

<div id="<?=$name?>" class="widget ui-widget ui-corner-all border-box">
	<h2 class="ui-widget-header ui-corner-all"><?=$label?></h2>
	<div class="ui-widget-content">
		<?php if(isset($widgetHeader)) { ?>
			<?=$widgetHeader?>
		<?php } ?>
		<div id="<?=$cssId?>" class="chart"></div>
		<?php if(isset($widgetFooter)) { ?>
			<?=$widgetFooter?>
		<?php } ?>
	</div>
</div>
